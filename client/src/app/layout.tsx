import type { Metadata } from "next";
import "../sass/main.scss";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Header } from "@/components/layout/Header";
import { getGlobalSettings } from "@/data/loaders";
import type { LinkProps, LogoProps } from "@/types";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
getGlobalSettings().then(data => console.log("GET_GLOBAL", data));

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface GlobalSettings {
  header: {
    logo: LogoProps;
    navigation: LinkProps[];
    cta: LinkProps;
  };
}

async function loader() {

  const { data } = await getGlobalSettings() as { data: GlobalSettings };
  
  console.log(getGlobalSettings());
  if (!data) {
    console.error("Failed to fetch global settings");
    return { header: null };
  }
  return { header: data.header };
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { header } = await loader();
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {header && <Header data={header} />}
        {children}
      </body>
    </html>
  );
}
